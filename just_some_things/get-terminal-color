#!/usr/bin/env python3.10
import os
import sys
import select
import contextlib
try:
    import termios
except ModuleNotFoundError:
    termios = None


def get_background_color(timeout=0.1, default_color=(7710, 8738, 10794)):
    if not termios:
        return (3084, 3084, 3084)
    stdin_fd = sys.stdin.fileno()
    prev_flags = termios.tcgetattr(stdin_fd)
    flags = prev_flags.copy()
    flags[3] &= ~termios.ICANON & ~termios.ECHO
    termios.tcsetattr(stdin_fd, termios.TCSANOW, flags)
    sys.stdout.write("\x1b]11;?\x07")
    sys.stdout.flush()
    if select.select([sys.stdin], [], [], timeout)[0] != [sys.stdin]:
        termios.tcsetattr(stdin_fd, termios.TCSADRAIN, prev_flags)
        return default_color
    color = os.read(stdin_fd, 24)[9:23]
    termios.tcsetattr(stdin_fd, termios.TCSADRAIN, prev_flags)
    with contextlib.suppress(ValueError):
        color = tuple(int(color, 16) for color in color.decode().split("/"))
        if len(color) == 3 and all(0 <= x <= 65535 for x in color):
            return color
    return default_color


red, green, blue = (c / (2**16 - 1) for c in get_background_color())
print("Current background color: ")
print(f"    red = {red:.5f}")
print(f"  green = {green:.5f}")
print(f"   blue = {blue:.5f}")
